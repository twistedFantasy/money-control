version: '3.9'

networks:
  network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:

services:
  frontend:
    build: ./leprechaun/frontend
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      - './leprechaun/frontend:/app'
      - './leprechaun/frontend/node_modules:/app/node_modules'
    depends_on:
      leprechaun:
        condition: service_healthy
    networks:
      - network

  leprechaun:
    build:
      context: ./
      dockerfile: ./leprechaun/Dockerfile
    command:
      - bash
      - -c
      - |
        pip --cache-dir=/usr/src/leprechaun/.pip-cache install -r requirements.txt
        python manage.py migrate
        python manage.py create_superuser
        python manage.py runserver 0.0.0.0:8000
    restart: on-failure
    env_file:
      - leprechaun/local/api.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/healthcheck/?format=json" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - target: 8000
        published: 8000
        protocol: tcp
        mode: host
    volumes:
      - ./leprechaun:/usr/src/leprechaun/
      - ./leprechaun/.pip-cache:/usr/src/leprechaun/.pip-cache
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - network

  postgres:
    image: "postgres:14.5-alpine"
    env_file:
      - leprechaun/local/postgres.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - network

  redis:
    image: "redis:7.0.4-alpine"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30
    volumes:
      - redis-data:/data
    networks:
      - network
